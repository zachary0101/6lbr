### Code common for all ARM CPUs
CONTIKI_CPU_ARM=$(CONTIKI)/cpu/arm

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI_CPU_ARM)/stm32f103

### Define the source files we have in the STM32F103 port
CONTIKI_CPU_DIRS = . 

CONTIKI_SOURCEFILES += clock.c  newlib-syscalls.c debug-uart.c util.c \
							rtimer-arch.c stm32-id-arch.c watchdog.c stm32-eeprom.c

THREADS =

# Toolchain definitions

GCC_TARGET ?= arm-none-eabi

CC       = $(GCC_TARGET)-gcc
LD       = $(GCC_TARGET)-gcc
AS       = $(GCC_TARGET)-as
AR       = $(GCC_TARGET)-ar
NM       = $(GCC_TARGET)-nm
OBJCOPY  = $(GCC_TARGET)-objcopy
STRIP    = $(GCC_TARGET)-strip
OBJDUMP	 = $(GCC_TARGET)-objdump
GDB			 = $(GCC_TARGET)-gdb
XSLTPROC	=xsltproc
OPENOCD	= openocd

PROJECT_OBJECTFILES += ${addprefix $(OBJECTDIR)/,$(CONTIKI_TARGET_MAIN:.c=.o)}

ARCH_FLAGS = -mthumb -mcpu=cortex-m3 -msoft-float

CFLAGSNO = -I. -I$(CONTIKI)/core -I$(CONTIKI_CPU) \
           ${addprefix -I,$(APPDIRS)} \
           -DMCK=$(MCK) \
           $(ARCH_FLAGS)
#-Wall -Wextra
CFLAGS		+= $(CFLAGSNO) -Os -g \
				-fno-common -MD -DSTM32F1
						
LDSCRIPT = $(CONTIKI)/platform/$(TARGET)/stm32_512k_64k.ld

LDFLAGS		+= --static -Wl,--start-group -lc -lgcc -lnosys -Wl,--end-group \
					-L$(CONTIKI_CPU) \
					-T$(LDSCRIPT) -nostartfiles -Wl,--gc-sections \
					$(ARCH_FLAGS)  -mfix-cortex-m3-ldrd 
		
TARGET_LIBFILES += -lopencm3_stm32f1 -lc -lnosys

%.bin: %.$(TARGET)
	$(OBJCOPY) -O binary $< $@


%.u: %.bin
	$(OPENOCD) $(OPENOCD_PARAMS) -c "init;reset halt;poll;stm32f1x mass_erase 0;flash write_bank 0 $< 0;reset run;shutdown"


ocd_reset:
	$(OPENOCD) $(OPENOCD_PARAMS) -c "init;reset halt;poll;reset run;shutdown"

clean: clean_cpu

clean_cpu:
	-rm -rf $(BUILTSRCDIR)

.PRECIOUS: %-nosyms.$(TARGET)

